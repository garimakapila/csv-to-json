{"version":3,"sources":["CSVInput/index.js","JSONOutput/index.js","App.js","reportWebVitals.js","index.js"],"names":["CSVInput","props","value","onChange","setExample","upload","className","id","type","accept","onClick","e","target","placeholder","JSONOutput","App","useState","csv","setCSV","json","setJSON","error","setError","reader","FileReader","onload","result","readAsText","files","i","j","lines","trim","replace","split","header","splice","jsonArray","length","line","object","push","JSON","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAoCeA,MApCf,SAAkBC,GAAQ,IAEnBC,EAAwCD,EAAxCC,MAAOC,EAAiCF,EAAjCE,SAAUC,EAAuBH,EAAvBG,WAAYC,EAAWJ,EAAXI,OAEnC,OACC,sBAAKC,UAAU,aAAf,UACC,sBAAKA,UAAU,UAAf,UACC,uBACCC,GAAG,SACHC,KAAK,OACLC,OAAO,oGACPN,SAAWE,IAEZ,yCAGA,qBACCK,QAAUN,EADX,qBAKA,qBACCM,QAAU,kBAAMP,EAAS,KAD1B,sBAMD,0BACCD,MAAQA,EACRC,SAAW,SAAAQ,GAAC,OAAIR,EAASQ,EAAEC,OAAOV,QAClCW,YAAY,yBCTDC,MArBf,SAAoBb,GAAQ,IAErBC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SAEb,OACC,sBAAKG,UAAU,aAAf,UACC,qBAAKA,UAAU,UAAf,SACC,qBACCI,QAAU,kBAAMP,EAAS,KAD1B,qBAMD,0BACCD,MAAQA,EACRC,SAAW,SAAAQ,GAAC,OAAIR,EAASQ,EAAEC,OAAOV,cCgFvBa,MAzFf,WAAgB,IAAD,EAEQC,mBAAS,IAFjB,mBAERC,EAFQ,KAEHC,EAFG,OAGUF,mBAAS,IAHnB,mBAGRG,EAHQ,KAGFC,EAHE,OAIYJ,mBAAS,IAJrB,mBAIRK,EAJQ,KAIDC,EAJC,KAMd,OACC,sBAAKhB,UAAU,MAAf,UACC,qBAAKA,UAAU,QAAf,6BAGA,qBAAKA,UAAU,QAAf,SACC,sBAAKA,UAAU,YAAf,UACC,cAAC,EAAD,CACCJ,MAAQe,EACRd,SAAWe,EACXd,WAoBL,WACCc,EACC,8GArBGb,OA+BL,SAAgBM,GACfW,EAAS,IACT,IACC,IAAIC,EAAS,IAAIC,WACjBD,EAAOE,OAAS,SAASd,GACxBO,EAAOK,EAAOG,SAEfH,EAAOI,WAAWhB,EAAEC,OAAOgB,MAAM,IAElC,MAAMP,GACLC,EAAS,uCAvCP,cAAC,EAAD,CACCpB,MAAQiB,EACRhB,SAAWiB,SAId,sBAAKd,UAAU,QAAf,cAA0Be,EAA1B,OACA,qBAAKf,UAAU,UAAf,SACC,qBACCI,QAkCJ,WACCY,EAAS,IACT,IAGC,IAGIO,EAAGC,EAHHC,GADJd,GADAA,EAAMA,EAAIe,OAAOC,QAAQ,KAAK,KACpBA,QAAQ,MAAM,KACRC,MAAM,MAClBC,EAASJ,EAAMK,OAAO,EAAG,GAAG,GAAGF,MAAM,KACrCG,EAAY,GAEhB,IAAKR,EAAI,EAAGA,EAAIE,EAAMO,OAAQT,IAAK,CAClC,IAAIU,EAAOR,EAAMF,GAAGK,MAAM,KAC1B,GAAIK,EAAKD,SAAWH,EAAOG,OAAQ,CAClC,IAAIE,EAAS,GACb,IAAKV,EAAI,EAAGA,EAAIK,EAAOG,OAAQR,IAC9BU,EAAOL,EAAOL,IAAMS,EAAKT,GAE1BO,EAAUI,KAAKD,IAGjBpB,EAAQsB,KAAKC,UAAUN,EAAW,KAAM,IAEzC,MAAOhB,GACNC,EAAS,qCAzDR,2BCrBWsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f2873ab1.chunk.js","sourcesContent":["function CSVInput(props) {\n\n\tlet { value, onChange, setExample, upload } = props;\n\n\treturn (\n\t\t<div className=\"table-cell\">\n\t\t\t<div className=\"buttons\">\n\t\t\t\t<input\n\t\t\t\t\tid=\"upload\"\n\t\t\t\t\ttype=\"file\" \n\t\t\t\t\taccept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\" \n\t\t\t\t\tonChange={ upload }\n\t\t\t\t/>\n\t\t\t\t<div>\n\t\t\t\t\tUpload\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tonClick={ setExample }\n\t\t\t\t>\n\t\t\t\t\tExample\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tonClick={ () => onChange(\"\") }\n\t\t\t\t>\n\t\t\t\t\tClear\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<textarea \n\t\t\t\tvalue={ value }\n\t\t\t\tonChange={ e => onChange(e.target.value) }\n\t\t\t\tplaceholder=\"Paste a CSV here\"\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default CSVInput;\n","function JSONOutput(props) {\n\n\tlet { value, onChange } = props;\n\n\treturn (\n\t\t<div className=\"table-cell\">\n\t\t\t<div className=\"buttons\">\n\t\t\t\t<div\n\t\t\t\t\tonClick={ () => onChange(\"\") }\n\t\t\t\t>\n\t\t\t\t\tClear\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<textarea \n\t\t\t\tvalue={ value }\n\t\t\t\tonChange={ e => onChange(e.target.value) }\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default JSONOutput;\n","import { useState } from 'react';\nimport './App.css';\n\nimport CSVInput from './CSVInput/';\nimport JSONOutput from './JSONOutput/';\n\nfunction App() {\n\n\tlet [ csv, setCSV ] = useState(\"\");\n\tlet [ json, setJSON ] = useState(\"\");\n\tlet [ error, setError ] = useState(\"\");\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div className=\"title\">\n\t\t\t\tCSV â†’ JSON\n\t\t\t</div>\n\t\t\t<div className=\"table\">\n\t\t\t\t<div className=\"table-row\">\n\t\t\t\t\t<CSVInput \n\t\t\t\t\t\tvalue={ csv }\n\t\t\t\t\t\tonChange={ setCSV }\n\t\t\t\t\t\tsetExample={ setExample }\n\t\t\t\t\t\tupload={ upload }\n\t\t\t\t\t/>\n\t\t\t\t\t<JSONOutput\n\t\t\t\t\t\tvalue={ json }\n\t\t\t\t\t\tonChange={ setJSON }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"error\"> { error } </div>\n\t\t\t<div className=\"buttons\">\n\t\t\t\t<div\n\t\t\t\t\tonClick={ convert }\n\t\t\t\t>\n\t\t\t\t\tConvert\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n\n\tfunction setExample() {\n\t\tsetCSV(\n\t\t\t'season,year,count\\n' + \n\t\t\t'spring,2020,2\\n' +\n\t\t\t'summer,2020,5\\n' + \n\t\t\t'fall,2020,8\\n' + \n\t\t\t'winter,2020,3\\n' + \n\t\t\t'spring,2021,7\\n' +\n\t\t\t'summer,2021,5'\n\t\t)\n\t}\n\n\tfunction upload(e) {\n\t\tsetError(\"\");\n\t\ttry {\n\t\t\tvar reader = new FileReader();\n\t\t\treader.onload = function(e) {\n\t\t\t\tsetCSV(reader.result)\n\t\t\t};\n\t\t\treader.readAsText(e.target.files[0]);\n\t\t}\n\t\tcatch(error) {\n\t\t\tsetError(\"Error. Please paste a valid CSV\");\n\t\t}\n\t}\n\n\tfunction convert() {\n\t\tsetError(\"\");\n\t\ttry {\n\t\t\tcsv = csv.trim().replace(/ /g,'');\n\t\t\tcsv = csv.replace(/\\t/g,'');\n\t\t\tlet lines = csv.split('\\n');\n\t\t\tlet header = lines.splice(0, 1)[0].split(',');\n\t\t\tlet jsonArray = [];\n\t\t\tvar i, j;\n\t\t\tfor (i = 0; i < lines.length; i++) {\n\t\t\t\tlet line = lines[i].split(',');\n\t\t\t\tif (line.length === header.length) {\n\t\t\t\t\tlet object = {};\n\t\t\t\t\tfor (j = 0; j < header.length; j++) {\n\t\t\t\t\t\tobject[header[j]] = line[j];\n\t\t\t\t\t}\n\t\t\t\t\tjsonArray.push(object);\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetJSON(JSON.stringify(jsonArray, null, 2))\n\t\t}\n\t\tcatch (error) {\n\t\t\tsetError(\"Error. Please paste a valid CSV\");\n\t\t}\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}